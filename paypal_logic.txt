index.html

<!DOCTYPE html>
<html>
<head>
  <title>PayPal Payment</title>
</head>
<body>
  <form action="/pay" method="post">
    <input type="email" name="payerEmail" placeholder="Payer Email" required><br>
    <input type="email" name="payeeEmail" placeholder="Payee Email" required><br>
    <input type="submit" value="Pay 100 USD">
  </form>
</body>
</html>


///////////////////////////////////////////////////////////////////////////////////////////


server.js

const express = require('express');
const bodyParser = require('body-parser');
const paypal = require('paypal-rest-sdk');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

// TUKI KONFIGURIRAM PAYPAL SDK
paypal.configure({
  'mode': 'sandbox', 
  'client_id': process.env.PAYPAL_CLIENT_ID, //MOJ CLIENT ID IZ .ENV DATOTEKE
  'client_secret': process.env.PAYPAL_CLIENT_SECRET //MOJ SECRET IZ .ENV DATOTEKE
});

// OMOGOÄŒA BRANJE PODATKOV 
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.get('/', (req, res) => {
  res.sendFile(__dirname + '/index.html');
});

// OBDELAVA TRANSAKCIJ
app.post('/pay', (req, res) => {
  const payerEmail = req.body.payerEmail;
  const payeeEmail = req.body.payeeEmail;
  const create_payment_json = {
    "intent": "sale",
    "payer": {
      "payment_method": "paypal"
    },
    "transactions": [{
      "amount": {
        "total": "100.00",
        "currency": "USD"
      },
      "payee": {
        "email": payeeEmail
      },
      "description": "Transfer between sandbox accounts"
    }],
    "redirect_urls": {
      "return_url": "http://localhost:" + PORT + "/success",
      "cancel_url": "http://localhost:" + PORT + "/cancel"
    }
  };

  // tukaj je prikaz logina od paypala
  paypal.payment.create(create_payment_json, function (error, payment) {
    if (error) {
      console.error('Create Payment Error:', JSON.stringify(error));
      res.send('Payment Creation Failed');
    } else {
      for (let i = 0; i < payment.links.length; i++) { 
        if (payment.links[i].rel === 'approval_url') {
          res.redirect(payment.links[i].href);
        }
      }
    }
  });
});

// POT ZA USPESNO IZVEDBO PLACILA
app.get('/success', (req, res) => {
  const payerId = req.query.PayerID;
  const paymentId = req.query.paymentId;

  const execute_payment_json = {
    "payer_id": payerId,
    "transactions": [{
      "amount": {
        "currency": "USD",
        "total": "100.00"
      }
    }]
  };

  paypal.payment.execute(paymentId, execute_payment_json, function (error, payment) {
    if (error) {
      console.error('Execute Payment Error:', JSON.stringify(error.response));
      res.send('Payment Execution Failed');
    } else {
      console.log('Payment Success:', JSON.stringify(payment));
      res.send('Payment Successful');
    }
  });
});

// POT ZA PREKLIC PLACILA
app.get('/cancel', (req, res) => {
  res.send('Payment Cancelled');
});

app.listen(PORT, () => {
  console.log('Server is running on port', PORT);
});


///////////////////////////////////////////////////////////////////////////////////////////

dependencies:

  "dependencies": {
    "body-parser": "^1.20.2",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "paypal-rest-sdk": "^1.8.1"
  }